/*
Ch∆∞∆°ng 1: C√†i ƒê·∫∑t M√¥i Tr∆∞·ªùng
Trong b√†i h·ªçc n√†y, b·∫°n s·∫Ω t·∫°o ph·∫ßn JavaScript c·ªßa oracle ƒë·ªÉ l·∫•y gi√° ETH t·ª´ API c·ªßa Binance. Sau ƒë√≥, b·∫°n s·∫Ω x√¢y d·ª±ng m·ªôt client c∆° b·∫£n t∆∞∆°ng t√°c v·ªõi oracle.

H√£y nh√¨n v√†o m√†n h√¨nh b√™n ph·∫£i. ƒê·ªÉ chu·∫©n b·ªã m·ªçi th·ª© cho b·∫°n, ch√∫ng t√¥i ƒë√£:

T·∫°o m·ªôt t·ªáp JavaScript m·ªõi c√≥ t√™n l√† EthPriceOracle.js
Nh·∫≠p m·ªôt lo·∫°t c√°c th∆∞ vi·ªán c·∫ßn thi·∫øt
Kh·ªüi t·∫°o m·ªôt v√†i bi·∫øn
ƒêi·ªÅn v√†o m·ªôt s·ªë ƒëo·∫°n m√£ c∆° b·∫£n ƒë·ªÉ k·∫øt n·ªëi ·ª©ng d·ª•ng c·ªßa b·∫°n v·ªõi Extdev Testnet (tham kh·∫£o tab utils/common.js ƒë·ªÉ bi·∫øt chi ti·∫øt).
Nh·ªØng ƒëi·ªÅu c·∫ßn l∆∞u √Ω:
Ch√∫ng t√¥i ƒë√£ nh·∫≠p c√°c build artifacts (c√°c th√†nh ph·∫ßn x√¢y d·ª±ng) v√† l∆∞u ch√∫ng trong m·ªôt bi·∫øn h·∫±ng s·ªë g·ªçi l√† OracleJSON. N·∫øu b·∫°n kh√¥ng nh·ªõ t·ª´ c√°c b√†i h·ªçc tr∆∞·ªõc, build artifacts l√† g√¨, ƒë√¢y l√† m·ªôt t√≥m t·∫Øt nhanh: build artifacts bao g·ªìm c√°c phi√™n b·∫£n m√£ bytecode c·ªßa h·ª£p ƒë·ªìng th√¥ng minh, ABI, v√† m·ªôt s·ªë d·ªØ li·ªáu n·ªôi b·ªô m√† Truffle s·ª≠ d·ª•ng ƒë·ªÉ tri·ªÉn khai m√£ ƒë√∫ng c√°ch.
ABI l√† g√¨?
T√≥m l·∫°i, ABI (Application Binary Interface) m√¥ t·∫£ giao di·ªán gi·ªØa hai ch∆∞∆°ng tr√¨nh m√°y t√≠nh. ƒê·ª´ng nh·∫ßm l·∫´n v·ªõi API (Application Programming Interface), th·ª© ƒë·ªãnh nghƒ©a giao di·ªán ·ªü c·∫•p ƒë·ªô cao h∆°n (m√£ ngu·ªìn). ABI m√¥ t·∫£ c√°ch c√°c h√†m c√≥ th·ªÉ ƒë∆∞·ª£c g·ªçi v√† c√°ch d·ªØ li·ªáu ƒë∆∞·ª£c l∆∞u tr·ªØ ·ªü ƒë·ªãnh d·∫°ng m√°y c√≥ th·ªÉ ƒë·ªçc ƒë∆∞·ª£c. V√≠ d·ª•, ƒë√¢y l√† c√°ch thu·ªôc t√≠nh pendingRequests c·ªßa h·ª£p ƒë·ªìng oracle ƒë∆∞·ª£c m√¥ t·∫£:

json
{
  "constant": false,
  "id": 143,
  "name": "pendingRequests",
  "nodeType": "VariableDeclaration",
  "scope": 240,
  "src": "229:38:2",
  "stateVariable": true,
  "storageLocation": "default",
  "typeDescriptions": {
    "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
    "typeString": "mapping(uint256 => bool)"
  }
}
B·∫°n c√≥ c·∫£m th·∫•y vui khi s·ª≠ d·ª•ng c√°c ng√¥n ng·ªØ b·∫≠c cao nh∆∞ JavaScript v√† Solidity, gi√∫p b·∫°n tr√°nh xa t·∫•t c·∫£ s·ª± ph·ª©c t·∫°p n√†y kh√¥ng? T√¥i ch·∫Øc ch·∫Øn l√† c√≥ ü§ì!

Ch√∫ng t√¥i ƒë√£ kh·ªüi t·∫°o m·ªôt m·∫£ng tr·ªëng g·ªçi l√† pendingRequests. B·∫°n s·∫Ω s·ª≠ d·ª•ng n√≥ sau ƒë·ªÉ theo d√µi c√°c y√™u c·∫ßu ƒë·∫øn.

‚òû D√†nh v√†i ph√∫t ƒë·ªÉ ƒë·ªçc qua ƒëo·∫°n m√£ tr∆∞·ªõc khi ti·∫øp t·ª•c!

Kh·ªüi T·∫°o H·ª£p ƒê·ªìng Oracle
Build artifacts n·∫±m trong m·ªôt t·ªáp JSON v√† ch√∫ng t√¥i ƒë√£ nh·∫≠p ch√∫ng b·∫±ng d√≤ng m√£ sau:

javascript
const OracleJSON = require('./oracle/build/contracts/EthPriceOracle.json')
V√≠ d·ª•, d·ª±a tr√™n th√¥ng tin ƒë∆∞·ª£c l∆∞u tr·ªØ trong t·ªáp n√†y, ·ª©ng d·ª•ng c·ªßa b·∫°n bi·∫øt r·∫±ng h√†m setLatestEthPrice nh·∫≠n ba tham s·ªë uint256 (_ethPrice, _callerAddress, v√† _id), v√† n√≥ c√≥ th·ªÉ t·∫°o m·ªôt giao d·ªãch g·ªçi h√†m n√†y.

Nh∆∞ng tr∆∞·ªõc khi th·ª±c hi·ªán ƒëi·ªÅu ƒë√≥, ƒë·ªÉ t∆∞∆°ng t√°c v·ªõi m·ªôt h·ª£p ƒë·ªìng ƒë√£ tri·ªÉn khai t·ª´ JavaScript, b·∫°n c·∫ßn kh·ªüi t·∫°o n√≥ b·∫±ng web3.eth.Contract. H√£y xem m·ªôt v√≠ d·ª• ƒë·ªÉ l√†m r√µ kh√°i ni·ªám n√†y:

javascript
const myContract = new web3js.eth.Contract(myContractJSON.abi, myContractJSON.networks[networkId].address)
L∆∞u √Ω r·∫±ng v√≠ d·ª• tr√™n s·ª≠ d·ª•ng m·ªôt bi·∫øn g·ªçi l√† networkId, bi·∫øn n√†y x√°c ƒë·ªãnh m·∫°ng m√† h·ª£p ƒë·ªìng c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai. networkId cho Extdev l√† 9545242630824, v√¨ v·∫≠y b·∫°n c√≥ th·ªÉ khai b√°o bi·∫øn networkId nh∆∞ sau:

javascript
const networkId = 9545242630824
D·ªÖ d√†ng ƒë√∫ng kh√¥ng! Nh∆∞ng d√π d√≤ng m√£ tr√™n tr√¥ng c√≥ v·∫ª ƒë∆°n gi·∫£n, n√≥ kh√¥ng ph·∫£i l√† m·ªôt √Ω t∆∞·ªüng t·ªët ƒë·ªÉ m√£ h√≥a c·ª©ng identifier c·ªßa m·∫°ng nh∆∞ v·∫≠y. T·∫°i sao kh√¥ng? B·ªüi v√¨ l√†m nh∆∞ v·∫≠y s·∫Ω y√™u c·∫ßu b·∫°n c·∫≠p nh·∫≠t networkId m·ªói khi h·ª£p ƒë·ªìng c·ªßa b·∫°n ƒë∆∞·ª£c tri·ªÉn khai tr√™n m·ªôt m·∫°ng kh√°c.

Gi·∫£i ph√°p t·ªët h∆°n l√† l·∫•y networkId b·∫±ng c√°ch g·ªçi h√†m web3js.eth.net.getId():

javascript
const networkId = await web3js.eth.net.getId()
*/
const axios = require('axios')
const BN = require('bn.js')
const common = require('./utils/common.js')
const SLEEP_INTERVAL = process.env.SLEEP_INTERVAL || 2000
const PRIVATE_KEY_FILE_NAME = process.env.PRIVATE_KEY_FILE || './oracle/oracle_private_key'
const CHUNK_SIZE = process.env.CHUNK_SIZE || 3
const MAX_RETRIES = process.env.MAX_RETRIES || 5
const OracleJSON = require('./oracle/build/contracts/EthPriceOracle.json')
var pendingRequests = []

// Start here
async function getOracleContract(web3js){
    const networkId = await web3js.eth.net.getId()
    return new web3js.eth.Contract(OracleJSON.abi, OracleJSON.networks[networkId].address)
}
